{"version":3,"sources":["transitions/slide-250.module.css","components/Contact/Contact.module.css","components/Message/Message.module.css","components/ContactsList/ContactsList.module.css","components/FormContacts/FormContacts.module.css","components/FilterContacts/FilterContacts.module.css","components/App/App.module.css","transitions/slide-500.module.css","components/Message/Message.js","components/FormContacts/FormContacts.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","components/FilterContacts/FilterContacts.js","components/App/App.js","index.js"],"names":["module","exports","Message","className","styles","Message__text","FormContacts","state","name","number","showError","handleChangeName","e","setState","target","value","handleChangeNumber","reset","handleSubmit","preventDefault","props","contacts","find","contact","prevState","setTimeout","newContact","id","shortid","generate","addNewContact","this","CSSTransition","in","timeout","classNames","slideTransition","unmountOnExit","onSubmit","contacts__form","htmlFor","contacts__label","type","onChange","contacts__input","contacts__button","Component","Contact","handleDeleteContact","item__name","item__right","onClick","item__button","ContactsList","TransitionGroup","component","contacts__list","map","key","list__items","FilterContacts","filter","handleFilter","placeholder","contacts__filter","App","isLoad","filteredContacts","localContacts","JSON","parse","localStorage","getItem","err","console","log","prevProps","setItem","stringify","filtredContacts","toLowerCase","includes","filterContacts","main_wrapper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4db60910.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide-250_enter__2towO\",\"enterActive\":\"slide-250_enterActive__39I3R\",\"exit\":\"slide-250_exit__34zcA\",\"exitActive\":\"slide-250_exitActive__19VXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__button\":\"Contact_item__button__YUgoC\",\"item__right\":\"Contact_item__right__2WNXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__N3W7W\",\"Message__text\":\"Message_Message__text__2iTZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactsList_contacts__list__1Rzln\",\"list__items\":\"ContactsList_list__items__8B7mP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__form\":\"FormContacts_contacts__form__CRY4i\",\"contacts__label\":\"FormContacts_contacts__label__1kwhp\",\"contacts__input\":\"FormContacts_contacts__input__2KzBq\",\"contacts__button\":\"FormContacts_contacts__button__nTIXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__filter\":\"FilterContacts_contacts__filter__2_Uw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_wrapper\":\"App_main_wrapper__3Amlh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide-500_enter__1StqB\",\"enterActive\":\"slide-500_enterActive__2U3DF\",\"exit\":\"slide-500_exit__Xz0fn\",\"exitActive\":\"slide-500_exitActive__MgsV2\"};","import React from 'react';\n\nimport styles from './Message.module.css';\n\nconst Message = () => {\n  return (\n    <div className={styles.Message}>\n      <p className={styles.Message__text}>Contact already exists</p>\n    </div>\n  );\n};\n\nexport default Message;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport styles from './FormContacts.module.css';\nimport slideTransition from '../../transitions/slide-250.module.css';\n\nimport Message from '../Message/Message';\n\nexport default class FormContacts extends Component {\n  static propTypes = {\n    addNewContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    showError: false,\n  };\n\n  handleChangeName = e => {\n    this.setState({ name: e.target.value });\n  };\n\n  handleChangeNumber = e => {\n    this.setState({ number: e.target.value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (!name || !number) return;\n\n    const sameContact = this.props.contacts.find(\n      contact => contact.name === name,\n    );\n\n    if (sameContact) {\n      this.setState(\n        prevState => ({\n          showError: !prevState.showError,\n        }),\n        () =>\n          setTimeout(() => {\n            this.setState(prevState => ({ showError: !prevState.showError }));\n          }, 2000),\n      );\n\n      this.reset();\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n      id: shortid.generate(),\n    };\n\n    this.props.addNewContact(newContact);\n    this.reset();\n  };\n\n  render() {\n    const { name, number, showError } = this.state;\n    return (\n      <>\n        <CSSTransition\n          in={showError}\n          timeout={250}\n          classNames={slideTransition}\n          unmountOnExit\n        >\n          <Message />\n        </CSSTransition>\n\n        <form onSubmit={this.handleSubmit} className={styles.contacts__form}>\n          <label\n            htmlFor={shortid.generate()}\n            className={styles.contacts__label}\n          >\n            Name\n            <input\n              type=\"text\"\n              value={name}\n              onChange={this.handleChangeName}\n              className={styles.contacts__input}\n            />\n          </label>\n          <label\n            htmlFor={shortid.generate()}\n            className={styles.contacts__label}\n          >\n            Number\n            <input\n              type=\"tel\"\n              value={number}\n              onChange={this.handleChangeNumber}\n              className={styles.contacts__input}\n            />\n          </label>\n          <button type=\"submit\" className={styles.contacts__button}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, handleDeleteContact }) => (\n  <>\n    <p className={styles.item__name}>{name}</p>\n\n    <div className={styles.item__right}>\n      <p>{number}</p>\n      <button\n        type=\"button\"\n        onClick={handleDeleteContact}\n        className={styles.item__button}\n      />\n    </div>\n  </>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport Contact from '../Contact/Contact';\n\nimport styles from './ContactsList.module.css';\nimport slideTransition from '../../transitions/slide-250.module.css';\n\nconst ContactsList = ({ contacts, handleDeleteContact }) => (\n  <TransitionGroup component=\"ul\" className={styles.contacts__list}>\n    {contacts.map(contact => (\n      <CSSTransition\n        key={contact.id}\n        timeout={250}\n        classNames={slideTransition}\n      >\n        <li className={styles.list__items}>\n          <Contact\n            name={contact.name}\n            number={contact.number}\n            handleDeleteContact={() => handleDeleteContact(contact.id)}\n          />\n        </li>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './FilterContacts.module.css';\n\nconst FilterContacts = ({ filter, handleFilter }) => (\n  <input\n    type=\"text\"\n    value={filter}\n    onChange={handleFilter}\n    placeholder=\"Filter...\"\n    className={styles.contacts__filter}\n  />\n);\n\nFilterContacts.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\nexport default FilterContacts;\n","import React, { Component } from 'react';\n\nimport { CSSTransition } from 'react-transition-group';\n\nimport FormContacts from '../FormContacts/FormContacts';\nimport ContactsList from '../ContactsList/ContactsList';\nimport FilterContacts from '../FilterContacts/FilterContacts';\n\nimport styles from './App.module.css';\nimport slideTransition from '../../transitions/slide-500.module.css';\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    isLoad: false,\n  };\n\n  componentDidMount() {\n    try {\n      const localContacts = JSON.parse(localStorage.getItem('contacts'));\n      if (localContacts) {\n        this.setState({ contacts: localContacts, isLoad: true });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      try {\n        localStorage.setItem('contacts', JSON.stringify(contacts));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  addNewContact = newContact => {\n    this.setState(state => ({ contacts: [newContact, ...state.contacts] }));\n  };\n\n  handleFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  handleDeleteContact = id => {\n    const { contacts } = this.state;\n    const filteredContacts = contacts.filter(contact => contact.id !== id);\n\n    this.setState({ contacts: filteredContacts });\n  };\n\n  render() {\n    const { contacts, filter, isLoad } = this.state;\n\n    const filtredContacts = filterContacts(contacts, filter);\n    return (\n      <div className={styles.main_wrapper}>\n        <CSSTransition\n          in={isLoad}\n          timeout={500}\n          classNames={slideTransition}\n          unmountOnExit\n        >\n          <h1>Phonebook</h1>\n        </CSSTransition>\n\n        <FormContacts addNewContact={this.addNewContact} contacts={contacts} />\n        <h2>Contacts</h2>\n\n        <FilterContacts filter={filter} handleFilter={this.handleFilter} />\n        <ContactsList\n          contacts={filtredContacts}\n          handleDeleteContact={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './main.css';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}